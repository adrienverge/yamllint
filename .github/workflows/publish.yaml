---

name: Publish

on: push  # yamllint disable-line rule:truthy

jobs:
  build:
    name: Build distribution package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Fetch tags
        if: github.ref_type != 'tag'
        run: git fetch --prune --unshallow --tags
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install pypa/build
        run: python -m pip install build twine
      - name: Add '.devN' to version for non-tag builds
        if: github.ref_type != 'tag'
        run:
          sed -i
          "/^APP_VERSION = /s/'$/.dev$(git describe --tags | cut -d- -f2)'/"
          yamllint/__init__.py
      - name: Build a binary wheel and a source tarball
        run: python -m build
      - name: Twine check the distribution packages
        run: python -Im twine check --strict dist/yamllint-*
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-testpypi:
    name: Publish distribution package to TestPyPI
    if: github.ref_name == github.event.repository.default_branch
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/yamllint
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish distribution package to PyPI
    if: github.ref_type == 'tag'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/yamllint
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution package
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign and upload GitHub Release
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: dist/yamllint-*.tar.gz dist/yamllint-*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run:
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run:
          gh release upload
          "$GITHUB_REF_NAME"
          dist/**
          --repo "$GITHUB_REPOSITORY"
